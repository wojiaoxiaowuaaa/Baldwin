sudo netstat -tuln | grep 5000 # 监听指定端口的流量信息，可以用 ss -tuln | grep :5000替代

git checkout feature/wl03 && git reset --hard origin/master && git push origin feature/wl03 --force  # 废弃本地的内容与远程的master分支同步（三步）

git restore # 回滚

git  pull origin  master  # 同步远程的master内容到本地

git fetch origin && git reset --hard origin/master && git clean -fd  # 废弃本地所有未提交的更改并于远程分支最新的额内容保持一致

git checkout -b develop origin/develop  # 克隆后切换分支 然后同步git pull origin develop

git rebase --abort && git fetch origin && git reset --hard origin/master && git push origin feature/wlfenzhi --force


----------------------------------------------------------------------------------------------
top -o mem # 内存占用排序

find . -type f -name "*.log" -delete # 删除指定目录下所有指定后缀的文件

cp  -r  source_directory  destination_directory # 递归复制目录

du  -sh  directory  # 显示目录的总大小

tail  -f  demo.log  # 实时跟踪展示日志的最新内容less  demo.txt分页查看

grep -ri "example" # 大小写不敏感,在指定目录中寻找字符串  ack(与grep类似可视化更好)

grep demo test.log  # 在文件中查找指定字符串

find  .  -name  "*.py"  # 递归查找当前目录及其子目录下的指定后缀的文件
 
find .  -size  +100M  # 递归查找当前目录及其子目录下大于10M的文件
 
tar  -zcvf  demo.tar.gz  Desktop  # 打包指定的目录
 
ps -ef | grep 3306  # 查看指定端口上的进程信息

lsof -i:8089  # 查看端口上的进程信息 然后输入kill -9 pid 杀进程



----------------------------------------------------------------------------------------------
sudo powermetrics --samplers smc | grep -i "CPU die temperature"  # Mac查看cpu温度(以下为work指令)

dd if=/dev/zero bs=1048576 count=1000 | gzip > boom.gz  (解压得到大文件1G:  gzip -d boom.gz)  # 生成测试压缩文件文件

dd if=/dev/zero of=output_file bs=1M count=24  # 生大小24M  文件名output_file

find .  -name   "*.zip"  -exec unzip -o {} \;  # 解压当前目录下的所有zip文件,末尾的分号记得带上

Open Default Shell in Tab  (Open Default Shell in Panel)  # sublime打开终端(底部打开or标签页打开)

pip3 install httpstat (brew install httpstat)  # 安装HTTP工具(优化请求结果展示)：

tspin demo.log  # 查看 日志

tl  demo.log   (pip3 install toolong)  # 日志/json查看工具

brew install android-platform-tools  # 安装adb工具(查看版本adb version)

python3 -m http.server  # 在指定目录下启动简易服务器 可通过浏览器访问

python3 -m pip install demo # 如果pip安装包后提示找不到可以用改方法来安装

pip3 install -r requirements.txt  # 从txt中安装-r是必须的

pip3 install --no-cache-dir -r requirements.txt  # pip安装失败时可这个命令

cd ~ && mkdir .pip && touch pip.conf  && vi pip.conf [global] index-url=https://指定的pip源 extra-index-url = https://添加多个源

pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple pip config set global.extra-index-url https://pypi.org/simple

/usr/local/bin/chromedriver  # 驱动位置

pytest -sv # 运行打印输出详细的测试细节


----------------------------------------------------------------------------------------------
https://ollama.com/

https://www.ddooo.com/az/13_1.html

https://www.trae.com.cn/home
